/*
 * File: app/view/invoicing/PaymentForm.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.invoicing.PaymentForm', {
    extend: 'Ext.form.Panel',
    alias: 'widget.invoicing.paymentform',

    requires: [
        'MyApp.view.invoicing.PaymentFormViewModel',
        'MyApp.view.invoicing.PaymentFormViewController',
        'Ext.form.FieldSet',
        'Ext.form.field.ComboBox'
    ],

    controller: 'invoicing.paymentform',
    viewModel: {
        type: 'invoicing.paymentform'
    },
    height: 500,
    itemId: 'paymentFormId',
    scrollable: 'vertical',
    width: 500,
    bodyPadding: 10,
    title: 'My Form',

    listeners: {
        boxReady: 'onPaymentFormItemIdBoxReady',
        inEdit: 'onPaymentFormItemIdInEdit',
        saveEdit: 'onPaymentFormItemIdSaveEdit',
        resetEdit: 'onPaymentFormItemIdResetEdit',
        chHist: 'onPaymentFormItemIdChHist',
        quitEdit: 'onPaymentFormItemIdQuitEdit'
    },
    items: [
        {
            xtype: 'fieldset',
            title: 'My Fields',
            items: [
                {
                    xtype: 'combobox',
                    anchor: '100%',
                    itemId: 'paymentMethodCodeComboBoxEditorItemId',
                    fieldLabel: 'Payment method',
                    name: 'paymentMethodCode',
                    allowBlank: false,
                    selectOnFocus: true,
                    displayField: 'paymentMethodCode',
                    forceSelection: true,
                    queryMode: 'local',
                    valueField: 'paymentMethodId',
                    bind: {
                        store: '{PaymentMethodCodeComboStore}'
                    }
                },
                {
                    xtype: 'combobox',
                    anchor: '100%',
                    itemId: 'cashBoxCodeComboBoxEditorItemId',
                    fieldLabel: 'Cash box',
                    name: 'cashBoxCode',
                    selectOnFocus: true,
                    displayField: 'cashBoxCode',
                    forceSelection: true,
                    queryMode: 'local',
                    valueField: 'cashBoxId',
                    bind: {
                        store: '{CashBoxCodeComboStore}'
                    }
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Payment date',
                    name: 'paymentDate',
                    allowBlank: false
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Payment amount',
                    name: 'paymentAmount',
                    allowBlank: false
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Payment entry date',
                    name: 'paymentEntryDate',
                    allowBlank: false
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Received amount',
                    name: 'paymentReceivedAmount'
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Returned amount',
                    name: 'paymentAmountReturned'
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Ouverpayment',
                    name: 'paymentIsOverpayment'
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Management Fees',
                    name: 'paymentIsMnagementFees'
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'Comment',
                    name: 'paymentComment'
                }
            ]
        }
    ],

    initConfig: function(instanceConfig) {
        var me = this,
            config = {};
        me.processInvoicingPaymentForm(config);
        if (instanceConfig) {
            me.self.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    processInvoicingPaymentForm: function(config) {
        FormAddPlugins.addPlugins(this);
    }

});