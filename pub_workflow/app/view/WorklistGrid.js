/*
 * File: app/view/WorklistGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.WorklistGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.worklistgrid',

    requires: [
        'MyApp.view.WorklistGridViewModel',
        'MyApp.view.WorklistGridViewController',
        'Ext.grid.column.Column',
        'Ext.view.Table',
        'Ext.selection.RowModel'
    ],

    controller: 'worklistgrid',
    viewModel: {
        type: 'worklistgrid'
    },
    reference: 'worklistGridRef',
    itemId: 'worklistGridId',
    minWidth: 1600,
    resizable: false,
    title: '',
    forceFit: true,

    bind: {
        store: '{WorklistStore}'
    },
    columns: [
        {
            xtype: 'gridcolumn',
            minWidth: 50,
            dataIndex: 'siteName',
            text: 'Site'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            scrollable: true,
            width: '',
            dataIndex: 'worklistDate',
            text: 'Date'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                return record.get('patientLName')+' '+record.get('pateintFName');
            },
            minWidth: 100,
            dataIndex: 'patientLName',
            text: 'Patient'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'patientBirthday',
            text: 'Birthday'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 150,
            dataIndex: 'worklistStudies',
            text: 'Studies'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklistMedRef',
            text: 'Doctor'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklistMedPresc',
            text: 'consultant Ph.'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklistMedRecipient',
            text: 'Dr. Recipient'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                var result;

                if(!value)
                value=0;
                result='<span style="color:#27b6af">'+record.get('worklistDictationsNb')+'&nbsp;<span/><a href="#" onclick="return;" style="color:#27b6af;font-size:17px;"><i class="fa fa-bullhorn"></i></a>';
                return result;
            },
            minWidth: 60,
            dataIndex: 'worklistDictationsStatus',
            text: 'Dict.'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                /*
                0 : no report
                1 :Report  in typing
                2: waiting for validation
                3- validated
                4- wainting for approuval
                5-approved
                6- printed.
                */
                var result;
                var color;
                var icon;
                var tooltip;
                switch(value)
                {
                    case 0:
                    color="#204d74";
                    icon="fa fa-file-o";
                    tooltip="Aucun compte rendu disponible";

                    break;
                    case 1:
                    color="#ec971f";
                    icon="fa fa-spinner fa-spin";
                    tooltip="En cours de frappe";

                    break;
                    case 2:
                    color="#ec971f";
                    icon="fa fa-hourglass-half";
                    tooltip="En attente de validation";

                    break;
                    case 3:
                    color="#66bb6a";
                    icon="fa fa-file-word-o";
                    tooltip="Validé";
                    break;
                    case 4:
                    color="#ec971f";
                    icon="fa fa-hourglass-half";
                    tooltip="En attente d'approbation";
                    break;
                    case 5:
                    color="#66bb6a";
                    icon="fa fa-file-word-o";
                    tooltip="Approuvé";
                    break;
                    case 6:
                    color="#66bb6a";
                    icon="fa fa-print";
                    tooltip="Imprimé";
                    break;

                }
                metaData.tdAttr = 'data-qtip="' + Ext.String.htmlEncode(tooltip) + '"';
                result='<span style="color:'+color+'">'+record.get('worklistCrsNb')+'&nbsp;<span/><a href="#" onclick="return;" style="color:'+color+
                ';font-size:17px;"><i class="'+icon+'"></i></a>';

                return result;
            },
            minWidth: 50,
            dataIndex: 'worklistLastCrStatus',
            text: 'C.R'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                /*
                0 no quotation
                1 quotation saved
                2 quotation disapproved
                3 quotation approved
                4 waiting
                */
                var result;
                var color;
                var icon;
                var tooltip;
                switch(value)
                {
                    case 0:
                    color="#204d74";
                    icon="fa fa-file-o";
                    tooltip="Aucune cotation";
                    break;
                    case 1:
                    color="#ec971f";
                    icon="fa fa-eur";
                    tooltip="Cotation enregistrée";
                    break;
                    case 2:
                    color="#ec971f";
                    icon="fa fa-eur";
                    tooltip="Cotation dévalidée";
                    break;
                    case 3:
                    color="#66bb6a";
                    icon="fa fa-eur";
                    tooltip="Cotation validée";
                    break;
                    case 4:
                    color="#ec971f";
                    icon="fa fa-spinner fa-spin";
                    tooltip="En cours de cotation";
                    break;

                }
                metaData.tdAttr = 'data-qtip="' + Ext.String.htmlEncode(tooltip) + '"';
                result='<a href="#" onclick="return;" style="color:'+color+
                ';font-size:17px;"><i class="'+icon+'"></i></a>';

                return result;
            },
            minWidth: 50,
            dataIndex: 'worklistLastDictationStatus',
            text: 'Cot.'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(!value) value=0;
                return'<span class="fa-stack fa-lg" style="font-size:10px;color:#204d74"><i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">'+value+'</i></span>';
            },
            minWidth: 50,
            dataIndex: 'worklistFTNum',
            text: 'F.T'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                var infoAlertLevel=record.get("worklistPatientInfoAlertLevel");
                var color;
                var icon;

                metaData.tdAttr = 'data-qtip="' + Ext.String.htmlEncode(value) + '"';
                switch(infoAlertLevel)
                {
                    case 0:
                    color="#204d74";
                    icon="fa fa-info-circle";

                    break;
                    case 1:
                    color="#ec971f";
                    icon="fa fa-exclamation-triangle";

                    break;
                    case 2:
                    color="#d43f3a";
                    icon="fa fa-exclamation-triangle";

                    break;

                }
                result='<a href="#" onclick="return;" style="color:'+color+
                ';font-size:17px;"><i class="'+icon+'"></i></a>';

                return result;

            },
            minWidth: 40,
            dataIndex: 'worklistPatientInfo',
            text: 'Pat.'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                var infoAlertLevel=record.get("worklistVisitInfoAlertLevel");
                var color;
                var icon;

                metaData.tdAttr = 'data-qtip="' + Ext.String.htmlEncode(value) + '"';
                switch(infoAlertLevel)
                {
                    case 0:
                    color="#204d74";
                    icon="fa fa-info-circle";

                    break;
                    case 1:
                    color="#ec971f";
                    icon="fa fa-exclamation-triangle";

                    break;
                    case 2:
                    color="#d43f3a";
                    icon="fa fa-exclamation-triangle";

                    break;

                }
                result='<a href="#" onclick="return;" style="color:'+color+
                ';font-size:17px;"><i class="'+icon+'"></i></a>';

                return result;

            },
            minWidth: 40,
            dataIndex: 'worklistVisitInfo',
            text: 'Visite.'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                var icon;
                if(!Ext.isEmpty(value)){
                    metaData.tdAttr = 'data-qtip="' + value + '"';
                    icon='fa fa-commenting-o';


                }
                else{
                    icon='fa fa-comment-o';


                }
                result='<a href="#" onclick="return;" style="color:'+'#204d74'+
                ';font-size:17px;"><i class="'+icon+'"></i></a>';
                return result;


            },
            minWidth: 100,
            dataIndex: 'worklistVisitComment',
            text: 'Comment'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 50,
            dataIndex: 'worklistPatientDu',
            text: 'Du .P'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 50,
            dataIndex: 'worklistFtDu',
            text: 'Du. V'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                var result;
                switch(value)
                {
                    case 0:
                    result='';
                    break;
                    case 1:
                    result='<i class="fa fa-check-circle-o" style="color:#66bb6a;font-size:17px"></i>';
                    break;

                }


                return result;
            },
            minWidth: 100,
            dataIndex: 'visitIsDone',
            text: 'Cloturé'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklisCrEmailedTo',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklisCrMailedTo',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: '	visitIsBySocialCard',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsFree',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsHospitalized',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsUrgent',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitHospitVisitNumber',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsAmo',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsAmc',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitPds',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitInvoiceType',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitFtFor',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitPEC',
            text: ''
        }
    ],
    listeners: {
        select: 'select',
        chHist: 'onWorklistGridIdChHist',
        afterrender: 'onWorklistGridIdAfterRender'
    },
    selModel: {
        selType: 'rowmodel',
        mode: 'MULTI'
    }

});