/*
 * File: app/view/WorklistGridViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.WorklistGridViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.worklistgrid',

    requires: [
        'MyApp.view.override.WorklistGridViewController'
    ],

    socialCardRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    infoVisitRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    visitTimeRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    infoPatientRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    patientRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    studiesRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    rendererPrescPhysician: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    rendererRecipientPhysician: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    dictationRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    CRRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    quotationRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    FTRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    commentRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    duRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    duRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    isDoneRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    emailRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    mailRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    visitIsFreeRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    hospitalizedRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    visitIsUrgentRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    invoiceTypeRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    visitPECRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

    },

    select: function(rowmodel, record, index, eOpts) {
        // Set selected record
        //this.getViewModel().set('record', record);

        // Show details
        //this.showView('details');
    },

    onWorklistGridIdChHist: function() {

    },

    onWorklistGridIdAfterRender: function(component, eOpts) {


    },

    onSavePreferenceItemIdClick: function(button, e, eOpts) {

    },

    onWorklistGridIdSelectionChange: function(model, selected, eOpts) {

    },

    onWorklistGridIdCellClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {

    },

    onWorklistGridIdEdit: function(editor, context) {

    }

});
