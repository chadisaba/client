/*
 * File: app/view/WorklistGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.WorklistGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.worklistgrid',

    requires: [
        'MyApp.view.WorklistGridViewModel',
        'MyApp.view.WorklistGridViewController',
        'Ext.grid.column.Date',
        'Ext.view.Table',
        'Ext.selection.RowModel',
        'Ext.toolbar.Toolbar',
        'Ext.button.Split',
        'Ext.menu.Menu',
        'Ext.menu.Item',
        'Ext.toolbar.Separator'
    ],

    controller: 'worklistgrid',
    viewModel: {
        type: 'worklistgrid'
    },
    reference: 'worklistGridRef',
    stateId: 'woklist-grid',
    stateful: true,
    itemId: 'worklistGridId',
    resizable: false,
    title: '',

    bind: {
        store: '{WorklistStore}'
    },
    columns: [
        {
            xtype: 'gridcolumn',
            createFilter: true,
            filterWidth: 100,
            stateId: 'worklistSiteCol',
            stateful: true,
            minWidth: 50,
            width: 100,
            dataIndex: 'siteCode',
            bind: {
                text: '{trans.site}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'socialCardRenderer',
            hidden: true,
            width: 50,
            dataIndex: 'visitIsBySocialCard',
            bind: {
                text: '{trans.vitale}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'infoVisitRenderer',
            width: 50,
            dataIndex: 'worklistVisitInfo'
        },
        {
            xtype: 'gridcolumn',
            renderer: 'visitTimeRenderer',
            filterType: 'hour',
            createFilter: true,
            width: 60,
            dataIndex: 'visitTime',
            bind: {
                text: '{trans.time}'
            }
        },
        {
            xtype: 'datecolumn',
            hidden: true,
            scrollable: true,
            dataIndex: 'visitDate',
            bind: {
                text: '{trans.date}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'infoPatientRenderer',
            width: 50,
            dataIndex: 'worklistPatientInfo'
        },
        {
            xtype: 'gridcolumn',
            renderer: 'patientRenderer',
            createFilter: true,
            width: 150,
            dataIndex: 'patientLName',
            bind: {
                text: '{trans.patient}'
            }
        },
        {
            xtype: 'datecolumn',
            dataIndex: 'patientBirthday',
            bind: {
                text: '{trans.birthday}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'studiesRenderer',
            createFilter: true,
            width: 200,
            dataIndex: 'worklistStudies',
            bind: {
                text: '{trans.studies}'
            }
        },
        {
            xtype: 'gridcolumn',
            createFilter: true,
            width: 80,
            dataIndex: 'worklistDoctor',
            bind: {
                text: '{trans.doctor}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'rendererPrescPhysician',
            hidden: true,
            dataIndex: 'worklistMedPresc',
            bind: {
                text: '{trans.consultantPh}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'rendererRecipientPhysician',
            hidden: true,
            dataIndex: 'worklistMedRecipient',
            bind: {
                text: '{trans.drRecipient}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'dictationRenderer',
            dataIndex: 'worklistDictationsStatus',
            bind: {
                text: '{trans.dictation}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'CRRenderer',
            createFilter: true,
            filterType: 'combobox',
            filterValues: [
                ComboData.crStatus
            ],
            dataIndex: 'worklistLastCrStatus',
            bind: {
                text: '{trans.report}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'quotationRenderer',
            filterValues: [
                ComboData.quotationStatus
            ],
            createFilter: true,
            filterType: 'combobox',
            hidden: true,
            dataIndex: 'worklistLastDictationStatus',
            bind: {
                text: '{trans.quotation}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'FTRenderer',
            hidden: true,
            dataIndex: 'worklistFTNum',
            bind: {
                text: '{trans.fT}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'commentRenderer',
            dataIndex: 'worklistVisitComment',
            bind: {
                text: '{trans.comment}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'duRenderer',
            dataIndex: 'worklistPatientDu',
            bind: {
                text: '{trans.duP}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'duRenderer',
            hidden: true,
            dataIndex: 'worklistFtDu',
            text: '{trans.duFt}'
        },
        {
            xtype: 'gridcolumn',
            renderer: 'isDoneRenderer',
            createFilter: true,
            filterType: 'boolean',
            initFilterValue: {
                value: 'no'
            },
            dataIndex: 'visitIsDone',
            text: '<i class="fa fa-lock"></i>'
        },
        {
            xtype: 'gridcolumn',
            renderer: 'emailRenderer',
            dataIndex: 'worklisCrEmailedTo',
            text: '<i class="fa fa-at"></i>'
        },
        {
            xtype: 'gridcolumn',
            renderer: 'mailRenderer',
            hidden: true,
            dataIndex: 'worklisCrMailedTo',
            text: '<i class="fa fa-envelope-o"></i>'
        },
        {
            xtype: 'gridcolumn',
            renderer: 'visitIsFreeRenderer',
            width: 60,
            dataIndex: 'visitIsFree',
            bind: {
                text: '{trans.free}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'hospitalizedRenderer',
            dataIndex: 'visitIsHospitalized',
            bind: {
                text: '{trans.hospitalized}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'visitIsUrgentRenderer',
            dataIndex: 'visitIsUrgent',
            bind: {
                text: '{trans.urgent}'
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'visitHospitVisitNumber',
            bind: {
                text: '{trans.visitnumber}'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: 'invoiceTypeRenderer',
            hidden: true,
            dataIndex: 'visitInvoiceType',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'visitFtFor',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            renderer: 'visitPECRenderer',
            createFilter: true,
            filterValues: [
                ComboData.pec
            ],
            filterType: 'combobox',
            dataIndex: 'visitPEC',
            bind: {
                text: '{trans.pec}'
            }
        }
    ],
    listeners: {
        select: 'select',
        chHist: 'onWorklistGridIdChHist',
        afterrender: 'onWorklistGridIdAfterRender',
        selectionchange: 'onWorklistGridIdSelectionChange',
        cellclick: 'onWorklistGridIdCellClick'
    },
    selModel: {
        selType: 'rowmodel',
        mode: 'MULTI'
    },
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            height: 40,
            items: [
                {
                    xtype: 'splitbutton',
                    itemId: 'actionsBtnMenu',
                    bind: {
                        text: '{trans.actions}'
                    },
                    menu: {
                        xtype: 'menu',
                        items: [
                            {
                                xtype: 'menuitem',
                                text: 'F.S Cerfa'
                            },
                            {
                                xtype: 'menuitem',
                                text: 'F.T Cerfa'
                            },
                            {
                                xtype: 'menuitem',
                                text: 'Etiquette'
                            },
                            {
                                xtype: 'menuitem',
                                text: 'Fiche suiveuse'
                            }
                        ]
                    }
                },
                {
                    xtype: 'splitbutton',
                    itemId: 'printBtnMenu',
                    bind: {
                        text: '{trans.print}'
                    },
                    menu: {
                        xtype: 'menu',
                        items: [
                            {
                                xtype: 'menuitem',
                                text: 'F.S Cerfa'
                            },
                            {
                                xtype: 'menuitem',
                                text: 'F.T Cerfa'
                            },
                            {
                                xtype: 'menuitem',
                                text: 'Etiquette'
                            },
                            {
                                xtype: 'menuitem',
                                text: 'Fiche suiveuse'
                            }
                        ]
                    }
                },
                {
                    xtype: 'tbseparator'
                },
                {
                    xtype: 'component',
                    html: ' <span title="Hospitalisé" class="fa-stack fa-lg" style="font-size:10px;color:#204d74;cursor: help;" >             <i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">H</i></span>',
                    itemId: 'hospitIcon',
                    style: 'color:\'red\''
                },
                {
                    xtype: 'component',
                    html: ' <span class="fa-stack fa-lg" style="font-size:10px;color:#204d74;cursor: help;" >             <i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">G</i></span>',
                    itemId: 'freeIcon'
                },
                {
                    xtype: 'component',
                    shadow: true,
                    html: ' <span class="fa-stack fa-lg" style="font-size:10px;color:#204d74;cursor: help;" >             <i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">AO</i></span>',
                    itemId: 'amoIcon'
                },
                {
                    xtype: 'component',
                    shadow: true,
                    html: ' <span class="fa-stack fa-lg" style="font-size:10px;color:#204d74;cursor: help;" >             <i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">AC</i></span>',
                    itemId: 'amcIcon'
                },
                {
                    xtype: 'component',
                    html: ' <span class="fa-stack fa-lg" style="font-size:10px;color:#204d74;cursor: help;" >             <i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">F.T</i></span>',
                    itemId: 'ftIcon'
                },
                {
                    xtype: 'component',
                    html: ' <span class="fa-stack fa-lg" style="font-size:10px;color:#204d74;cursor: help;" >             <i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">FS</i></span>',
                    itemId: 'fsIcon'
                },
                {
                    xtype: 'component',
                    html: ' <span class="fa-stack fa-lg" style="font-size:10px;color:#204d74;cursor: help;" >             <i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">FSE</i></span>',
                    itemId: 'fseIcon'
                },
                {
                    xtype: 'component',
                    html: ' <span class="fa-stack fa-lg" style="font-size:10px;color:#204d74;cursor: help;" >             <i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">U</i></span>',
                    itemId: 'urgentIcon'
                }
            ]
        }
    ]

});