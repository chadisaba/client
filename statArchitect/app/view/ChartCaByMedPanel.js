/*
 * File: app/view/ChartCaByMedPanel.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.ChartCaByMedPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.chartcabymedpanel',

    requires: [
        'MyApp.view.ChartCaByMedPanelViewModel',
        'MyApp.view.ChartCaByMedPanelViewController',
        'Ext.chart.CartesianChart',
        'Ext.chart.axis.Category3D',
        'Ext.chart.axis.Numeric3D',
        'Ext.chart.series.Bar3D',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    controller: 'chartcabymedpanel',
    viewModel: {
        type: 'chartcabymedpanel'
    },
    itemId: 'chartCaByMedPanel',
    title: 'Chiffre d\'affaire par médecin',

    items: [
        {
            xtype: 'cartesian',
            height: 250,
            insetPadding: 20,
            bind: {
                store: '{CaByMedStore}'
            },
            axes: [
                {
                    type: 'category3d',
                    fields: [
                        'name'
                    ],
                    position: 'bottom',
                    title: 'Médecin'
                },
                {
                    type: 'numeric3d',
                    fields: [
                        'amount'
                    ],
                    position: 'left',
                    title: 'C.A'
                }
            ],
            series: [
                {
                    type: 'bar3d',
                    label: {
                        field: 'amount',
                        display: 'insideEnd',
                        renderer: function (v) {
                                                         var nf = new Intl.NumberFormat('fr', {style: "currency", currency: "EUR"});
                                    return  nf.format(v);
                                                    }
                    },
                    xField: 'name',
                    yField: [
                        'amount'
                    ]
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'top',
            items: [
                {
                    xtype: 'button',
                    itemId: 'refreshBtn',
                    text: 'Refresh',
                    listeners: {
                        click: 'onRefreshBtnClick'
                    }
                }
            ]
        }
    ],
    listeners: {
        afterrender: 'onChartCaByMedPanelAfterRender'
    }

});