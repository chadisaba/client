/*
 * File: app/view/scheduler/SchedulerPanel.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.scheduler.SchedulerPanel', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.scheduler.schedulerpanel',

    requires: [
        'MyApp.view.scheduler.SchedulerPanelViewModel',
        'Ext.panel.Panel'
    ],

    viewModel: {
        type: 'scheduler.schedulerpanel'
    },
    layout: 'border',
    title: 'Scheduler',

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    me.processSchedulerPanel({
                        xtype: 'schedulergrid',
                        viewPreset: 'hourAndDay',
                        mode: 'vertical',
                        region: 'center',
                        header: false,
                        title: 'SchedulerPanel'
                    })
                ]
            };
        if (instanceConfig) {
            me.self.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    processSchedulerPanel: function(config) {
        return Ext.apply(config,{
            columns                 : [
                {
                    text      : 'Name',
                    width     : 200,
                    sortable  : true,
                    dataIndex : 'Name'
                }
            ],
           startDate : new Date(),


             // Store holding all the resources
          bind: {
                store: '{Resource}'
            },
            resourceStore     : new Sch.data.ResourceStore({


                data   : [
                    {Id : 'MadMike', Name : 'Mike'},
                    {Id : 'JakeTheSnake', Name : 'Jake'},
                    {Id : 'KingFu', Name : 'King'},
                    {Id : 'BeerBrian', Name : 'Brian'},
                    {Id : 'LindaAnderson', Name : 'Linda'},
                    {Id : 'DonJohnson', Name : 'Don'},
                    {Id : 'KarenJohnson', Name : 'Karen'},
                    {Id : 'DougHendricks', Name : 'Doug'},
                    {Id : 'PeterPan', Name : 'Peter'}
                ]
            }),

                 eventStore     : new Sch.data.EventStore({

                data   : [
                    {
                        ResourceId : 'MadMike',
                        Type       : 'Call',
                        Title      : 'Assignment 1',
                        StartDate  : "2015-03-01 10:00",
                        EndDate    : "2015-03-01 11:00"
                    },
                    {
                        ResourceId : 'KarenJohnson',
                        Type       : 'Call',
                        Title      : 'Customer call',
                        StartDate  : "2015-03-01 14:00",
                        EndDate    : "2015-03-01 16:00"
                    },
                    {
                        ResourceId : 'LindaAnderson',
                        Type       : 'Meeting',
                        Title      : 'Assignment 2',
                        StartDate  : "2015-03-01 10:00",
                        EndDate    : "2015-03-01 12:00"
                    }
                ]
            })





        });

    }

});