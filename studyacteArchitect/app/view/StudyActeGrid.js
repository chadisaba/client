/*
 * File: app/view/StudyActeGrid.js
 *
 * This file was generated by Sencha Architect version 4.1.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.StudyActeGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.studyactegrid',

    requires: [
        'MyApp.view.StudyActeGridViewModel',
        'MyApp.view.StudyActeGridViewController',
        'Ext.grid.column.Column',
        'Ext.form.field.Text',
        'Ext.form.field.Checkbox',
        'Ext.view.Table',
        'Ext.grid.plugin.RowEditing',
        'Ext.selection.RowModel'
    ],

    controller: 'studyactegrid',
    viewModel: {
        type: 'studyactegrid'
    },
    reference: 'studyActeGridRef',
    itemId: 'studyActeGridId',
    resizable: false,
    title: '',
    forceFit: true,

    bind: {
        store: '{StudyActeStore}'
    },
    columns: [
        {
            xtype: 'gridcolumn',
            flex: 1,
            maxWidth: 100,
            dataIndex: 'studyActeCode',
            text: 'Code',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeCodeTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'studyActeType',
            text: 'Type',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeTypeTextFieldItemId',
                allowBlank: false
            }
        },
        {
            xtype: 'gridcolumn',
            maxWidth: 70,
            width: 70,
            dataIndex: 'studyActeAmount',
            text: 'Montant',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeAmountTextFieldItemId',
                allowBlank: false
            }
        },
        {
            xtype: 'gridcolumn',
            maxWidth: 70,
            minWidth: 70,
            width: 70,
            dataIndex: 'studyActeAmountDepassement',
            text: 'Mt. dépassement',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeAmountDepassementTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            maxWidth: 70,
            minWidth: 70,
            width: 50,
            dataIndex: 'studyActeAssociationNonPrevu',
            text: 'A.N.P.',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeAssociationNonPrevuTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            maxWidth: 80,
            minWidth: 80,
            dataIndex: 'studyActeModificators',
            text: 'Modificateurs',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeModificatorsTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'studyActeCodeGroupement',
            text: 'Qalificatif',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeDepenseTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'studyActeQuantity',
            text: 'Quantité',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeQuantityTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'studyActeAdditionalAmount',
            text: 'Dép',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeAdditionalAmountTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'studyActeAcceptedModificators',
            text: 'Modificateurs',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeAcceptedModificatorsTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'studyActeCoefficient',
            text: 'Coefficient',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeCoefficientTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                return Utility.renderer.checkBoxRenderer(value);
            },
            hidden: true,
            dataIndex: 'studyActeEntentePrealable',
            text: 'E.P.',
            editor: {
                xtype: 'checkboxfield'
            }
        },
        {
            xtype: 'gridcolumn',
            hidden: true,
            dataIndex: 'studyActeRefundable',
            text: 'Refundable',
            editor: {
                xtype: 'textfield',
                itemId: 'studyActeRefundableTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                return Utility.renderer.checkBoxRenderer(value);
            },
            hidden: true,
            dataIndex: 'active',
            text: '',
            editor: {
                xtype: 'checkboxfield'
            }
        }
    ],
    listeners: {
        select: 'select',
        chHist: 'onStudyActeGridIdChHist',
        afterrender: 'onStudyActeGridIdAfterRender',
        inEdit: 'onStudyActeGridIdInEdit',
        resetEdit: 'onStudyActeGridIdResetEdit',
        saveEdit: 'onStudyActeGridIdSaveEdit',
        deleteItem: 'onStudyActeGridIdDeleteItem',
        modifyItem: 'onStudyActeGridIdModifyItem',
        quitEdit: 'onStudyActeGridIdQuitEdit',
        beforeedit: 'onStudyActeGridIdBeforeEdit',
        canceledit: 'onStudyActeGridIdCanceledit',
        containerclick: 'onStudyActeGridIdContainerClick',
        edit: 'onStudyActeGridIdEdit',
        beforecellclick: 'onStudyActeGridIdBeforeCellClick',
        validateedit: 'onStudyActeGridIdValidateedit'
    },
    plugins: [
        {
            ptype: 'rowediting',
            pluginId: 'rowEdit',
            autoCancel: false,
            clicksToMoveEditor: 0,
            errorSummary: false
        }
    ],
    selModel: {
        selType: 'rowmodel',
        mode: 'MULTI'
    },

    initConfig: function(instanceConfig) {
        var me = this,
            config = {};
        me.processStudyActeGrid(config);
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    processStudyActeGrid: function(config) {
        GridAddPlugins.addPlugins(this,{liveSearch:false,preferences:false,noAdd:true});
    }

});