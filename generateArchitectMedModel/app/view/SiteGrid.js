/*
 * File: app/view/SiteGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.SiteGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.sitegrid',

    requires: [
        'MyApp.view.SiteGridViewModel',
        'MyApp.view.SiteGridViewController',
        'Ext.form.field.ComboBox',
        'Ext.form.field.TextArea',
        'Ext.form.field.Checkbox',
        'Ext.view.Table',
        'Ext.grid.plugin.RowEditing',
        'Ext.selection.RowModel',
        'Ext.grid.column.Action'
    ],

    controller: 'sitegrid',
    viewModel: {
        type: 'sitegrid'
    },
    reference: 'siteGridRef',
    itemId: 'siteGridId',
    resizable: false,
    title: '',
    forceFit: true,

    bind: {
        store: '{SiteStore}'
    },
    columns: [
        {
            xtype: 'gridcolumn',
            dataIndex: 'siteName',
            text: 'Name',
            editor: {
                xtype: 'textfield',
                itemId: 'siteNameTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'siteCode',
            text: 'Code',
            editor: {
                xtype: 'textfield',
                itemId: 'siteCodeTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'sitePhone',
            text: 'Phone',
            editor: {
                xtype: 'textfield',
                itemId: 'sitePhoneTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'siteFax',
            text: 'Fax',
            editor: {
                xtype: 'textfield',
                itemId: 'siteFaxTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'siteGroupId',
            text: 'Group',
            editor: {
                xtype: 'combobox',
                itemId: 'groupIdComboBoxEditorItemId',
                allowBlank: false,
                selectOnFocus: true,
                displayField: 'siteGroupName',
                forceSelection: true,
                queryMode: 'local',
                valueField: 'siteGroupId',
                bind: {
                    store: '{GroupIdComboStore}'
                }
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'siteCategory',
            text: 'Category',
            editor: {
                xtype: 'combobox',
                itemId: 'siteCategoryComboBoxEditorItemId',
                allowBlank: false,
                selectOnFocus: true,
                displayField: 'siteCategoryName',
                forceSelection: true,
                queryMode: 'local',
                valueField: 'siteCategory',
                bind: {
                    store: '{SiteCategoryComboStore}'
                }
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'siteAddress1',
            text: 'Address 1',
            editor: {
                xtype: 'textareafield',
                itemId: 'siteAddress1TextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'siteAddress2',
            text: 'Address 2',
            editor: {
                xtype: 'textareafield',
                itemId: 'siteAddress2TextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'siteZipCode',
            text: 'Zip Code',
            editor: {
                xtype: 'textfield',
                itemId: 'siteZipCodeTextFieldItemId'
            }
        },
        {
            xtype: 'gridcolumn',
            dataIndex: 'siteCityId',
            text: 'City',
            editor: {
                xtype: 'combobox',
                itemId: 'siteCityIdComboBoxEditorItemId',
                selectOnFocus: true,
                displayField: 'cityName',
                forceSelection: true,
                queryMode: 'local',
                valueField: 'cityId',
                bind: {
                    store: '{SiteCityIdComboStore}'
                }
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                return Utility.renderer.checkBoxRenderer(value);
            },
            dataIndex: 'siteIsVirtual',
            text: 'Vitrual?',
            editor: {
                xtype: 'checkboxfield'
            }
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                return Utility.renderer.checkBoxRenderer(value);
            },
            dataIndex: 'active',
            text: 'Active?',
            editor: {
                xtype: 'checkboxfield'
            }
        },
        {
            xtype: 'actioncolumn',
            text: 'config',
            iconCls: 'fa fa-pencil fa-2x',
            items: [
                {
                    handler: 'openConfigHandler',
                    iconCls: 'fa fa-cogs'
                }
            ]
        }
    ],
    listeners: {
        select: 'select',
        chHist: 'onSiteGridIdChHist',
        afterrender: 'onSiteGridIdAfterRender',
        inEdit: 'onSiteGridIdInEdit',
        resetEdit: 'onSiteGridIdResetEdit',
        saveEdit: 'onSiteGridIdSaveEdit',
        addItem: 'onSiteGridIdAddItem',
        deleteItem: 'onSiteGridIdDeleteItem',
        modifyItem: 'onSiteGridIdModifyItem',
        quitEdit: 'onSiteGridIdQuitEdit',
        beforeedit: 'onSiteGridIdBeforeEdit',
        canceledit: 'onSiteGridIdCanceledit',
        containerclick: 'onSiteGridIdContainerClick',
        edit: 'onSiteGridIdEdit',
        beforecellclick: 'onSiteGridIdBeforeCellClick',
        validateedit: 'onSiteGridIdValidateedit'
    },
    plugins: [
        {
            ptype: 'rowediting',
            pluginId: 'rowEdit',
            autoCancel: false,
            clicksToMoveEditor: 0,
            errorSummary: false
        }
    ],
    selModel: {
        selType: 'rowmodel',
        mode: 'MULTI'
    },

    initConfig: function(instanceConfig) {
        var me = this,
            config = {};
        me.processSiteGrid(config);
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    processSiteGrid: function(config) {
        Plugins.grid.GridEditingPlugin.configure(this);
        this.plugins.push (
                           new Plugins.grid.GridEditingPlugin({pluginId: 'gridediting'}));

    }

});