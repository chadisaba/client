/*
 * File: app/view/PatientHistoryGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.PatientHistoryGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.patienthistorygrid',

    requires: [
        'MyApp.view.PatientHistoryGridViewModel',
        'MyApp.view.PatientHistoryGridViewController',
        'Ext.grid.column.Date',
        'Ext.view.Table',
        'Ext.grid.feature.Grouping',
        'Ext.XTemplate'
    ],

    controller: 'patienthistorygrid',
    viewModel: {
        type: 'patienthistorygrid'
    },
    cls: 'custom-grid',
    title: 'Historique ',
    hideHeaders: true,

    bind: {
        store: '{PatientHistoryStore}'
    },
    columns: [
        {
            xtype: 'datecolumn',
            dataIndex: 'docDate',
            hidden: true,
            text: 'Date',
            format: 'd/m/Y'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                return '';
            },
            dataIndex: 'path',
            text: 'Path',
            flex: 1
        },
        {
            xtype: 'gridcolumn',
            renderer: 'typeDocumentRenderer',
            dataIndex: 'type',
            text: 'Type',
            flex: 3
        }
    ],
    features: [
        {
            ftype: 'grouping',
            groupHeaderTpl: [
                'Consultation du {name}'
            ]
        }
    ],
    listeners: {
        afterrender: 'onGridpanelAfterRender',
        itemdblclick: 'onGridpanelItemDblClick'
    }

});