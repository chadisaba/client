/*
 * File: app/view/WorklistGrid.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.WorklistGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.worklistgrid',

    requires: [
        'MyApp.view.WorklistGridViewModel',
        'MyApp.view.WorklistGridViewController',
        'Ext.grid.column.Column',
        'Ext.view.Table',
        'Ext.selection.RowModel'
    ],

    controller: 'worklistgrid',
    viewModel: {
        type: 'worklistgrid'
    },
    reference: 'worklistGridRef',
    itemId: 'worklistGridId',
    minWidth: 1600,
    resizable: false,
    title: '',
    forceFit: true,

    bind: {
        store: '{WorklistStore}'
    },
    columns: [
        {
            xtype: 'gridcolumn',
            minWidth: 50,
            dataIndex: 'siteName',
            text: 'Site'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            scrollable: true,
            width: '',
            dataIndex: 'worklistDate',
            text: 'Date'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'patientLastName',
            text: 'Patient'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'patientBirthDay',
            text: 'Birthday'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 150,
            dataIndex: 'worklistStudies',
            text: 'Studies'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklistMedRef',
            text: 'Doctor'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklistMedPresc',
            text: 'consultant Ph.'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklistMedRecipient',
            text: 'Dr. Recipient'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                var result;

                if(!value)
                value=0;
                switch(value)
                {

                    case 1:
                    result='<span class="fa-stack fa-lg" style="font-size:10px;color:#ff7043;"><i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">'+value+'</i></span>';

                    break;

                }
                result='<span class="fa-stack fa-lg" style="font-size:10px;color:#ff7043;"><i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">'+value+'</i></span>';


                return result;
            },
            minWidth: 70,
            dataIndex: 'worklistDictationsStatus',
            text: 'Dictée'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                var result;

                if(!value)
                value=0;
                switch(value)
                {

                    case 1:
                    result='<span class="fa-stack fa-lg" style="font-size:10px;color:#ff7043;"><i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">'+value+'</i></span>';

                    break;

                }
                result='<span class="fa-stack fa-lg" style="font-size:10px;color:#ff7043;"><i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">'+value+'</i></span>';


                return result;
            },
            minWidth: 50,
            dataIndex: 'worklistCrsStatus',
            text: 'C.R'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                var result;
                switch(value)
                {
                    case 1:
                    result='<i class="fa fa-hourglass-half" color="#ff7043"></i>';
                    break;

                }
                result='<i class="fa fa-check-circle-o" style="color:#66bb6a;font-size:17px"></i>';

                return result;
            },
            minWidth: 50,
            dataIndex: 'worklistCotationStatus',
            text: 'Cot.'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                if(!value) value=0;
                return'<span class="fa-stack fa-lg" style="font-size:10px;color:"blue"><i class="fa fa-circle fa-stack-2x"></i><i class="fa fa-inverse fa-stack-1x">'+value+'</i></span>';
            },
            minWidth: 50,
            dataIndex: 'worklistFTNum',
            text: 'F.T'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                return '<i class="fa fa-info-circle" style="font-size:17px;color:#31b0d5"></i>';
            },
            minWidth: 100,
            dataIndex: 'worklistPatientInfo',
            text: 'Pat. info'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                return '<i class="fa fa-info-circle" style="font-size:17px;color:#31b0d5"></i>';
            },
            minWidth: 100,
            dataIndex: '	worklistVisitInfo',
            text: 'Visite Info.'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklistVisitComment',
            text: 'Comment'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklistPatientDu',
            text: 'Pat. Du'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklistFtDu',
            text: 'Visite Du'
        },
        {
            xtype: 'gridcolumn',
            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                var result;
                switch(value)
                {
                    case 0:
                    result='';
                    break;
                    case 1:
                    result='<i class="fa fa-check-circle-o" style="color:#66bb6a;font-size:17px"></i>';
                    break;

                }


                return result;
            },
            minWidth: 100,
            dataIndex: 'visitIsDone',
            text: 'Cloturé'
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklisCrEmailedTo',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'worklisCrMailedTo',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'patientInfos',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitInfos',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitComment',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: '	visitIsBySocialCard',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsFree',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsHospitalized',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsUrgent',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitHospitVisitNumber',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsAmo',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitIsAmc',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitPds',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitInvoiceType',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitFtFor',
            text: ''
        },
        {
            xtype: 'gridcolumn',
            minWidth: 100,
            dataIndex: 'visitPEC',
            text: ''
        }
    ],
    listeners: {
        select: 'select',
        chHist: 'onWorklistGridIdChHist',
        afterrender: 'onWorklistGridIdAfterRender'
    },
    selModel: {
        selType: 'rowmodel',
        mode: 'MULTI'
    }

});