/*
 * File: app/view/EstHasServForm.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.EstHasServForm', {
    extend: 'Ext.form.Panel',
    alias: 'widget.esthasservform',

    requires: [
        'MyApp.view.EstHasServFormViewModel',
        'MyApp.view.EstHasServFormViewController',
        'Ext.form.FieldSet',
        'Ext.form.field.Text'
    ],

    controller: 'esthasservform',
    viewModel: {
        type: 'esthasservform'
    },
    height: 500,
    itemId: 'estHasServFormId',
    width: 500,
    bodyPadding: 10,
    title: 'My Form',

    listeners: {
        _inEdit0: 'onEstHasServFormItemIdBoxReady',
        _inEdit1: 'onEstHasServFormItemIdInEdit',
        inEdit: function() {
            var me = this,
                args = Ext.toArray(arguments, 0, -1);
            args.unshift('_inEdit0');
            me.fireEvent.apply(me, args);
            args[0] = '_inEdit1';
            me.fireEvent.apply(me, args);
        },
        saveEdit: 'onEstHasServFormItemIdSaveEdit',
        resetEdit: 'onEstHasServFormItemIdResetEdit',
        chHist: 'onEstHasServFormItemIdChHist',
        quitEdit: 'onEstHasServFormItemIdQuitEdit'
    },
    items: [
        {
            xtype: 'fieldset',
            title: 'Service',
            items: [
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'code',
                    name: 'estHasServCode',
                    allowBlank: false
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    fieldLabel: 'name',
                    name: 'estHasServName',
                    allowBlank: false
                }
            ]
        }
    ],

    initConfig: function(instanceConfig) {
        var me = this,
            config = {};
        me.processEstHasServForm(config);
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    processEstHasServForm: function(config) {
        FormAddPlugins.addPlugins(this);
    }

});